theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.15,0.93),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))
g1 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_4503, colour="Dívida Líquida"),size=0.750) +
geom_line(aes(x = data, y = ts_13762, colour="Dívida Bruta"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = "", y = "% Y") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.15,0.93),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))
g1
g1 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_4503, colour="Dívida Líquida"),size=0.750) +
geom_line(aes(x = data, y = ts_13762, colour="Dívida Bruta"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = "", y = "% Y") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.15,0.93),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(vintercept = as.Date("2020-04-01"), size=0.2, colour="black", linetype = 2) +
g1
g1 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_4503, colour="Dívida Líquida"),size=0.750) +
geom_line(aes(x = data, y = ts_13762, colour="Dívida Bruta"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = "", y = "% Y") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.15,0.93),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(vintercept = as.Date("2020-04-01"), size=0.2, colour="black", linetype = 2)
g1
g1 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_4503, colour="Dívida Líquida"),size=0.750) +
geom_line(aes(x = data, y = ts_13762, colour="Dívida Bruta"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = "", y = "% Y") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.15,0.93),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(xintercept = as.Date("2020-04-01"), size=0.2, colour="black", linetype = 2)
g1
g1 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_4503, colour="Dívida Líquida"),size=0.750) +
geom_line(aes(x = data, y = ts_13762, colour="Dívida Bruta"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = "", y = "% Y") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.15,0.93),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="black", linetype = 2)
g1 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_4503, colour="Dívida Líquida"),size=0.750) +
geom_line(aes(x = data, y = ts_13762, colour="Dívida Bruta"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = "", y = "% Y") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.15,0.93),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="black", linetype = 2)
g1
g1 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_4503, colour="Dívida Líquida"),size=0.750) +
geom_line(aes(x = data, y = ts_13762, colour="Dívida Bruta"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = "", y = "% Y") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.1,0.85),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="black", linetype = 2)
g1
g2 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_5793, colour="Superávit Primário"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_hline(yintercept = 0, size=0.2, colour="black", linetype = 2) +
labs(x = "", y = "% Y") +
ggtitle("(B)") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.75,0.80),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))
g2
g2 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_5793, colour="Superávit Primário"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_hline(yintercept = 0, size=0.2, colour="black", linetype = 2) +
labs(x = "", y = "% Y") +
ggtitle("(B)") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.1,0.80),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))
g2
g2 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_5793, colour="Superávit Primário"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_hline(yintercept = 0, size=0.2, colour="black", linetype = 2) +
labs(x = "", y = "% Y") +
ggtitle("(B)") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.1,0.80),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="black", linetype = 2)
g2
grid.arrange(g1,g2,ncol=2)
g1 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_4503, colour="Dívida Líquida"),size=0.750) +
geom_line(aes(x = data, y = ts_13762, colour="Dívida Bruta"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Trajetória de Dívida") +
labs(x = "", y = "% Y") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.1,0.85),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="black", linetype = 2)
grid.arrange(g1,g2,ncol=2)
g2 <- ggplot(data = governo) +
geom_line(aes(x = data, y = ts_5793, colour="Superávit Primário"),size=0.750) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_hline(yintercept = 0, size=0.2, colour="black", linetype = 2) +
labs(x = "", y = "% Y") +
ggtitle("Superavit Primário") +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
plot.title = element_text(hjust = 0.5),
legend.position=c(0.15,0.85),
legend.title = element_blank(),
legend.key = element_rect(fill = "white", colour = "white"))+
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="black", linetype = 2)
grid.arrange(g1,g2,ncol=2)
View(PIM)
write.table(PMS1, file = "PMS1.txt", sep = ",", quote = FALSE, row.names = TRUE)
write.table(PMS2, file = "PMS2.txt", sep = ",", quote = FALSE, row.names = TRUE)
write.table(PMC1, file = "PMC2.txt", sep = ",", quote = FALSE, row.names = TRUE)
write.table(PMC1, file = "PMC1.txt", sep = ",", quote = FALSE, row.names = TRUE)
PMC2 <- get_sidra(3418,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
PMC2 <- get_sidra(3418,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
write.table(PMC2, file = "PMC2.txt", sep = ",", quote = FALSE, row.names = TRUE)
# limpar o cachê
rm(list = ls())
# configuração de exibição de decimais
options(digits = "2", scipen = 99)
# Carregando os Pacotes Necessários
ip <- installed.packages()
for (i in c("tidyverse","readxl", "ggplot2", "stargazer","sidrar", "gridExtra", "knitr",
"BETS")){
if ( !(i %in% ip) ) { install.packages(i) }
if (i=="Quandl") { library(i, character.only = T) ; Quandl.auth("WP2rt8HsRo3kjWsRkLY5") }
else library(i, character.only = T)
}
rm(list=c("ip","i"))
# 6442 	Índice e variação da receita nominal e do volume de serviços (2014 = 100)
PMS1 <- get_sidra(6442,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
write.table(PMS1, file = "PMS1.txt", sep = ",", quote = FALSE, row.names = TRUE)
# 6445 Índice e variação da receita nominal e do volume das atividades turísticas (2014 = 100)
PMS2 <- get_sidra(6445,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
# 6445 Índice e variação da receita nominal e do volume das atividades turísticas (2014 = 100)
PMS2 <- get_sidra(6445,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
write.table(PMS2, file = "PMS2.txt", sep = ",", quote = FALSE, row.names = TRUE)
# Índices de volume e de receita nominal de vendas de materiais de construção, por tipos de índice (2014 = 100)
PMC1 <- get_sidra(3415,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
write.table(PMC1, file = "PMC1.txt", sep = ",", quote = FALSE, row.names = TRUE)
PMC2 <- get_sidra(3418,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
PMC2 <- get_sidra(3418,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
write.table(PMC2, file = "PMC2.txt", sep = ",", quote = FALSE, row.names = TRUE)
write.table(PMC2, file = "PMC2.txt", sep = ",", quote = FALSE, row.names = TRUE)
# 3653 	Produção Física Industrial, por seções e atividades industriais
PIM <-   get_sidra(3653,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
PMC2 <- get_sidra(3418,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
write.table(PMC2, file = "PMC2.txt", sep = ",", quote = FALSE, row.names = TRUE)
# 3653 	Produção Física Industrial, por seções e atividades industriais
PIM <-   get_sidra(3653,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
write.table(PIM, file = "PIM.txt", sep = ",", quote = FALSE, row.names = TRUE)
write.table(PIM, file = "PIM.txt", sep = ",", quote = FALSE, row.names = TRUE)
precos <- BETSget(c(189,433,225,4390), from = "2010-01-01", to = "2021-01-31")
precos <- BETSget(c(189,433,225,4390), from = "2010-01-01", to = "2021-01-31")
contas_publicas <- BETSget(c(13762,4503,5793), from = "2010-01-01", to = "2021-01-31")
governo <- data.frame(contas_publicas)
governo <- governo %>% slice_tail(n = 100)
write.table(governo, file = "governo.txt", sep = ",", quote = FALSE, row.names = TRUE)
write.table(precos_acum, file = "precos_acum.txt", sep = ",", quote = FALSE, row.names = TRUE)
# Acumular em 12 meses
data1  <- data.frame(precos)
#data  <- ts(data, start = c(2000,1), freq=12)
fator <- 1+data1/100
acumulado <- (fator*lag(fator,1)*lag(fator,2)*lag(fator,3)*
lag(fator,4)*lag(fator,5)*lag(fator,6)*lag(fator,7)*
lag(fator,8)*lag(fator,9)*lag(fator,10)*lag(fator,11)
-1)*100
colnames(acumulado) = colnames(data1)
acumulado <- data.frame(acumulado)
acumulado$data <- seq(as.Date("2010/01/01"),
by = "month",
length.out = length(acumulado$ts_189))
governo$data <- seq(as.Date("2010/01/01"),
by = "month",
length.out = length(contas_publicas$ts_13762))
precos_acum <- data.frame(acumulado) %>% slice_tail(n = 13)
# Acumular em 12 meses
data1  <- data.frame(precos)
#data  <- ts(data, start = c(2000,1), freq=12)
fator <- 1+data1/100
acumulado <- (fator*lag(fator,1)*lag(fator,2)*lag(fator,3)*
lag(fator,4)*lag(fator,5)*lag(fator,6)*lag(fator,7)*
lag(fator,8)*lag(fator,9)*lag(fator,10)*lag(fator,11)
-1)*100
colnames(acumulado) = colnames(data1)
acumulado <- data.frame(acumulado)
acumulado$data <- seq(as.Date("2010/01/01"),
by = "month",
length.out = length(acumulado$ts_189))
precos_acum <- data.frame(acumulado) %>% slice_tail(n = 13)
write.table(precos_acum, file = "precos_acum.txt", sep = ",", quote = FALSE, row.names = TRUE)
governo <- data.frame(contas_publicas)
governo <- governo %>% slice_tail(n = 100)
governo$data <- seq(as.Date("2010/01/01"),
by = "month",
length.out = length(contas_publicas$ts_13762))
governo <- data.frame(contas_publicas)
governo$data <- seq(as.Date("2010/01/01"),
by = "month",
length.out = length(contas_publicas$ts_13762))
governo <- governo %>% slice_tail(n = 100)
write.table(governo, file = "governo.txt", sep = ",", quote = FALSE, row.names = TRUE)
PMS1 <- read.csv("C:/Users/Charles/Desktop/4i/PMS1.txt")
View(PMS1)
View(PMS1)
# limpar o cachê
rm(list = ls())
source('C:/Users/Charles/Desktop/4i/baixar_dados_questao3.R', encoding = 'UTF-8', echo=TRUE)
# limpar o cachê
rm(list = ls())
# configuração de exibição de decimais
options(digits = "2", scipen = 99)
# Carregando os Pacotes Necessários
ip <- installed.packages()
for (i in c("tidyverse","readxl", "ggplot2", "stargazer","sidrar", "gridExtra", "knitr",
"BETS")){
if ( !(i %in% ip) ) { install.packages(i) }
if (i=="Quandl") { library(i, character.only = T) ; Quandl.auth("WP2rt8HsRo3kjWsRkLY5") }
else library(i, character.only = T)
}
rm(list=c("ip","i"))
# 6442 	Índice e variação da receita nominal e do volume de serviços (2014 = 100)
PMS1 <- get_sidra(6442,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
saveRDS(PMS1, "PMS1.rds")
# 6445 Índice e variação da receita nominal e do volume das atividades turísticas (2014 = 100)
PMS2 <- get_sidra(6445,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
saveRDS(PMS2, "PMS2.rds")
# Índices de volume e de receita nominal de vendas de materiais de construção, por tipos de índice (2014 = 100)
PMC1 <- get_sidra(3415,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
saveRDS(PMC1, "PMC1.rds")
PMC2 <- get_sidra(3418,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
saveRDS(PMC2, "PMC2.rds")
# 3653 	Produção Física Industrial, por seções e atividades industriais
PIM <-   get_sidra(3653,
#         variable = 1,
period = c("202001-202101"),
geo = "State"
)
saveRDS(PIM, "PIM.rds")
precos <- BETSget(c(189,433,225,4390), from = "2010-01-01", to = "2021-01-31")
contas_publicas <- BETSget(c(13762,4503,5793), from = "2010-01-01", to = "2021-01-31")
# Acumular em 12 meses
data1  <- data.frame(precos)
#data  <- ts(data, start = c(2000,1), freq=12)
fator <- 1+data1/100
acumulado <- (fator*lag(fator,1)*lag(fator,2)*lag(fator,3)*
lag(fator,4)*lag(fator,5)*lag(fator,6)*lag(fator,7)*
lag(fator,8)*lag(fator,9)*lag(fator,10)*lag(fator,11)
-1)*100
colnames(acumulado) = colnames(data1)
acumulado <- data.frame(acumulado)
acumulado$data <- seq(as.Date("2010/01/01"),
by = "month",
length.out = length(acumulado$ts_189))
precos_acum <- data.frame(acumulado) %>% slice_tail(n = 13)
governo <- data.frame(contas_publicas)
governo$data <- seq(as.Date("2010/01/01"),
by = "month",
length.out = length(contas_publicas$ts_13762))
governo <- governo %>% slice_tail(n = 100)
saveRDS(precos_acum, "precos_acum.rds")
saveRDS(governo, "governo.rds")
# limpar o cachê
rm(list = ls())
# limpar o cachê
rm(list = ls())
# configuração de exibição de decimais
options(digits = "2", scipen = 99)
# Carregando os Pacotes Necessários
ip <- installed.packages()
for (i in c("tidyverse","readxl", "ggplot2", "stargazer","sidrar", "gridExtra", "knitr",
"BETS")){
if ( !(i %in% ip) ) { install.packages(i) }
if (i=="Quandl") { library(i, character.only = T) ; Quandl.auth("WP2rt8HsRo3kjWsRkLY5") }
else library(i, character.only = T)
}
# 6442 	Índice e variação da receita nominal e do volume de serviços (2014 = 100)
PMS1 <- readRDS("PMS1.rds")
# 6445 Índice e variação da receita nominal e do volume das atividades turísticas (2014 = 100)
PMS2 <- readRDS("PMS2.rds")
# Índices de volume e de receita nominal de vendas de materiais de construção, por tipos de índice (2014 = 100)
PMC1 <- readRDS("PMC1.rds")
PMC2 <- readRDS("PMC2.rds")
# 3653 	Produção Física Industrial, por seções e atividades industriais
PIM <-  readRDS("PIM.rds")
# extraindo séries do BCB/SGS
precos_acum <- readRDS("precos_acum.rds")
governo <- readRDS("governo.rds")
# Numeração dos estados
norte    <- c(12,16,13,15,11,14,17)
coeste   <- c(52,51,50)
sudeste  <- c(32,31,33,35)
sul      <- c(41,42,43)
df       <- 53
receita_serviços_NE <- PMS1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% nordeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
# Numeração dos estados
norte    <- c(12,16,13,15,11,14,17)
nordeste <- c(27,29,23,21,25,26,22,24,28)
coeste   <- c(52,51,50)
sudeste  <- c(32,31,33,35)
sul      <- c(41,42,43)
df       <- 53
receita_serviços_NE <- PMS1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% nordeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_serviços_NO <- PMS1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% norte) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_serviços_CO <- PMS1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% coeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_serviços_S <- PMS1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% sul) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_serviços_SDE <- PMS1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% sudeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_turismo_NE <- PMS2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% nordeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_turismo_NO <- PMS2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% norte) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_turismo_S <- PMS2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% sul) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_turismo_SDE <- PMS2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% sudeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
receita_turismo_CO <- PMS2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% coeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
# Comércio 3415
vr_construcao_NE <- PMC1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% nordeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
vr_construcao_NO <- PMC1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% norte) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
vr_construcao_S <- PMC1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% sul) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
vr_construcao_CO <- PMC1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% coeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
vr_construcao_SDE <- PMC1 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, Variável, Valor) %>% filter(`Tipos de índice (Código)`==40311 & `Unidade da Federação (Código)` %in% sudeste) %>% group_by(`Mês (Código)`,Variável) %>% summarise("Valor"=mean(Valor)) %>% spread(Variável, Valor)
atividades <- c("Combustíveis e lubrificantes", "Hipermercados, supermercados, produtos alimentícios, bebidas e fumo", "Tecidos, vestuário e calçados", "Móveis e eletrodomésticos", "Artigos farmacêuticos, médicos, ortopédicos, de perfumaria e cosméticos", "Equipamentos e materiais para escritório, informática e comunicação")
pmc_NE <- PMC2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, `Variável (Código)`, Atividades, Valor) %>% filter(`Tipos de índice (Código)`== 40311 & `Unidade da Federação (Código)` %in% nordeste & Atividades %in% atividades & `Variável (Código)`==564) %>% group_by(`Mês (Código)`, `Variável (Código)`, Atividades) %>% summarise("Valor"=mean(Valor)) %>% unite("para_simplificar",`Variável (Código)`, Atividades, remove=TRUE) %>% spread(para_simplificar, Valor)
pmc_NO <- PMC2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, `Variável (Código)`, Atividades, Valor) %>% filter(`Tipos de índice (Código)`== 40311 & `Unidade da Federação (Código)` %in% norte & Atividades %in% atividades & `Variável (Código)`==564) %>% group_by(`Mês (Código)`, `Variável (Código)`, Atividades) %>% summarise("Valor"=mean(Valor)) %>% unite("para_simplificar",`Variável (Código)`, Atividades, remove=TRUE) %>% spread(para_simplificar, Valor)
pmc_S <- PMC2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, `Variável (Código)`, Atividades, Valor) %>% filter(`Tipos de índice (Código)`== 40311 & `Unidade da Federação (Código)` %in% sul & Atividades %in% atividades & `Variável (Código)`==564) %>% group_by(`Mês (Código)`, `Variável (Código)`, Atividades) %>% summarise("Valor"=mean(Valor)) %>% unite("para_simplificar",`Variável (Código)`, Atividades, remove=TRUE) %>% spread(para_simplificar, Valor)
pmc_CO <- PMC2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, `Variável (Código)`, Atividades, Valor) %>% filter(`Tipos de índice (Código)`== 40311 & `Unidade da Federação (Código)` %in% coeste & Atividades %in% atividades & `Variável (Código)`==564) %>% group_by(`Mês (Código)`, `Variável (Código)`, Atividades) %>% summarise("Valor"=mean(Valor)) %>% unite("para_simplificar",`Variável (Código)`, Atividades, remove=TRUE) %>% spread(para_simplificar, Valor)
pmc_SDE <- PMC2 %>% select(`Unidade da Federação (Código)`, `Tipos de índice (Código)`, `Mês (Código)`, `Variável (Código)`, Atividades, Valor) %>% filter(`Tipos de índice (Código)`== 40311 & `Unidade da Federação (Código)` %in% sudeste & Atividades %in% atividades & `Variável (Código)`==564) %>% group_by(`Mês (Código)`, `Variável (Código)`, Atividades) %>% summarise("Valor"=mean(Valor)) %>% unite("para_simplificar",`Variável (Código)`, Atividades, remove=TRUE) %>% spread(para_simplificar, Valor)
#
atividades2 <- c("1 Indústria geral", "2 Indústrias extrativas", "3 Indústrias de transformação")
pim_NE <- PIM %>% select(`Unidade da Federação (Código)`, `Seções e atividades industriais (CNAE 2.0) (Código)`, `Mês (Código)`, `Seções e atividades industriais (CNAE 2.0)`,`Variável (Código)`, Variável, Valor) %>% filter(`Variável (Código)`== 3135 & `Seções e atividades industriais (CNAE 2.0)` %in% atividades2 & `Unidade da Federação (Código)` %in% nordeste) %>% group_by(`Mês (Código)`,`Seções e atividades industriais (CNAE 2.0)`) %>% summarise("Valor"=mean(Valor,na.rm=TRUE)) %>% spread(`Seções e atividades industriais (CNAE 2.0)`, Valor)
pim_NO <- PIM %>% select(`Unidade da Federação (Código)`, `Seções e atividades industriais (CNAE 2.0) (Código)`, `Mês (Código)`, `Seções e atividades industriais (CNAE 2.0)`,`Variável (Código)`, Variável, Valor) %>% filter(`Variável (Código)`== 3135 & `Seções e atividades industriais (CNAE 2.0)` %in% atividades2 & `Unidade da Federação (Código)` %in% norte) %>% group_by(`Mês (Código)`,`Seções e atividades industriais (CNAE 2.0)`) %>% summarise("Valor"=mean(Valor,na.rm=TRUE)) %>% spread(`Seções e atividades industriais (CNAE 2.0)`, Valor)
pim_S <- PIM %>% select(`Unidade da Federação (Código)`, `Seções e atividades industriais (CNAE 2.0) (Código)`, `Mês (Código)`, `Seções e atividades industriais (CNAE 2.0)`,`Variável (Código)`, Variável, Valor) %>% filter(`Variável (Código)`== 3135 & `Seções e atividades industriais (CNAE 2.0)` %in% atividades2 & `Unidade da Federação (Código)` %in% sul) %>% group_by(`Mês (Código)`,`Seções e atividades industriais (CNAE 2.0)`) %>% summarise("Valor"=mean(Valor,na.rm=TRUE)) %>% spread(`Seções e atividades industriais (CNAE 2.0)`, Valor)
pim_SDE <- PIM %>% select(`Unidade da Federação (Código)`, `Seções e atividades industriais (CNAE 2.0) (Código)`, `Mês (Código)`, `Seções e atividades industriais (CNAE 2.0)`,`Variável (Código)`, Variável, Valor) %>% filter(`Variável (Código)`== 3135 & `Seções e atividades industriais (CNAE 2.0)` %in% atividades2 & `Unidade da Federação (Código)` %in% sudeste) %>% group_by(`Mês (Código)`,`Seções e atividades industriais (CNAE 2.0)`) %>% summarise("Valor"=mean(Valor,na.rm=TRUE)) %>% spread(`Seções e atividades industriais (CNAE 2.0)`, Valor)
pim_CO <- PIM %>% select(`Unidade da Federação (Código)`, `Seções e atividades industriais (CNAE 2.0) (Código)`, `Mês (Código)`, `Seções e atividades industriais (CNAE 2.0)`,`Variável (Código)`, Variável, Valor) %>% filter(`Variável (Código)`== 3135 & `Seções e atividades industriais (CNAE 2.0)` %in% atividades2 & `Unidade da Federação (Código)` %in% coeste) %>% group_by(`Mês (Código)`,`Seções e atividades industriais (CNAE 2.0)`) %>% summarise("Valor"=mean(Valor,na.rm=TRUE)) %>% spread(`Seções e atividades industriais (CNAE 2.0)`, Valor)
```{r, echo = FALSE, warning = FALSE, include = TRUE, fig.width=14, fig.height=4, message = FALSE, fig.cap = "Evolução da Receita e do Volume do Setor de Serviços para as Regiões do Brasil", fig.align='center'}
BETSsearch(description = "*")
BETSsearch(description = "*")
data <- seq(as.Date("2020/01/01"), by = "month", length.out = length(receita_serviços_NE$`Mês (Código)`))
grid.arrange(
ggplot(data = receita_serviços_NE, aes(x = data, y = `Índice de receita nominal de serviços`, colour = "Norte-Nordeste")) + geom_line(size=0.750) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_line(data = receita_serviços_CO, aes(x = data, y = `Índice de receita nominal de serviços`, colour = "Centro-Oeste"),size=0.750) +
geom_line(data = receita_serviços_S, aes(x = data, y = `Índice de receita nominal de serviços`, colour = "Sul"),size=0.750) +
geom_line(data = receita_serviços_SDE, aes(x = data, y = `Índice de receita nominal de serviços`, colour = "Sudeste"),size=0.750) +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
legend.title = element_blank(),
legend.text = element_text(color = "black", size = 8),
legend.position= c(0.85,0.17),
legend.key = element_rect(fill = "white", colour = "white")) +
labs(x = "Mês/Ano", y = "Índice")  +
ggtitle("Receita nominal de serviços")  +
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="gray", linetype = 2)+
geom_vline(xintercept = as.Date("2020-12-01"), size=0.2, colour="gray", linetype = 2),
ggplot(data = receita_serviços_NE, aes(x = data, y = `Índice de volume de serviços`, colour = "Norte-Nordeste")) + geom_line(size=0.750) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_line(data = receita_serviços_CO, aes(x = data, y = `Índice de volume de serviços`, colour = "Centro-Oeste"),size=0.750) +
geom_line(data = receita_serviços_S, aes(x = data, y = `Índice de volume de serviços`, colour = "Sul"),size=0.750) +
geom_line(data = receita_serviços_SDE, aes(x = data, y = `Índice de volume de serviços`, colour = "Sudeste"),size=0.750) +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
legend.title = element_blank(),
legend.text = element_text(color = "black", size = 8),
legend.position= c(0.85,0.17),
legend.key = element_rect(fill = "white", colour = "white")) +
labs(x = "Mês/Ano", y = "")  +
ggtitle("Volume de serviços")  +
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="gray", linetype = 2)+
geom_vline(xintercept = as.Date("2020-12-01"), size=0.2, colour="gray", linetype = 2),
ncol = 2)
data <- seq(as.Date("2020/01/01"), by = "month", length.out = length(receita_serviços_NE$`Mês (Código)`))
grid.arrange(
ggplot(data = receita_serviços_NE, aes(x = data, y = `Índice de receita nominal de serviços`, colour = "Norte-Nordeste")) + geom_line(size=0.750) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_line(data = receita_serviços_CO, aes(x = data, y = `Índice de receita nominal de serviços`, colour = "Centro-Oeste"),size=0.750) +
geom_line(data = receita_serviços_S, aes(x = data, y = `Índice de receita nominal de serviços`, colour = "Sul"),size=0.750) +
geom_line(data = receita_serviços_SDE, aes(x = data, y = `Índice de receita nominal de serviços`, colour = "Sudeste"),size=0.750) +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
legend.title = element_blank(),
legend.text = element_text(color = "black", size = 8),
legend.position= c(0.85,0.17),
legend.key = element_rect(fill = "white", colour = "white")) +
labs(x = "Mês/Ano", y = "Índice")  +
ggtitle("Receita nominal de serviços")  +
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="gray", linetype = 2)+
geom_vline(xintercept = as.Date("2020-12-01"), size=0.2, colour="gray", linetype = 2),
ggplot(data = receita_serviços_NE, aes(x = data, y = `Índice de volume de serviços`, colour = "Norte-Nordeste")) + geom_line(size=0.750) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_line(data = receita_serviços_CO, aes(x = data, y = `Índice de volume de serviços`, colour = "Centro-Oeste"),size=0.750) +
geom_line(data = receita_serviços_S, aes(x = data, y = `Índice de volume de serviços`, colour = "Sul"),size=0.750) +
geom_line(data = receita_serviços_SDE, aes(x = data, y = `Índice de volume de serviços`, colour = "Sudeste"),size=0.750) +
theme(panel.background = element_rect(fill = "white", colour = "grey25"),
legend.background = element_rect(fill=NA),
legend.title = element_blank(),
legend.text = element_text(color = "black", size = 8),
legend.position= c(0.85,0.17),
legend.key = element_rect(fill = "white", colour = "white")) +
labs(x = "Mês/Ano", y = "")  +
ggtitle("Volume de serviços")  +
geom_vline(xintercept = as.Date("2020-03-01"), size=0.2, colour="gray", linetype = 2)+
geom_vline(xintercept = as.Date("2020-12-01"), size=0.2, colour="gray", linetype = 2),
ncol = 2)
